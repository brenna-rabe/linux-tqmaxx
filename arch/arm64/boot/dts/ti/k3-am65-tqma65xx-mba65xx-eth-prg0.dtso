// SPDX-License-Identifier: GPL-2.0
/*
 * Copyright (C) 2020-2022 TQ-Systems GmbH
 * Author: Matthias Schiffer <matthias.schiffer@ew.tq-group.com>
 */

/dts-v1/;
/plugin/;
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/net/ti-dp83867.h>
#include <dt-bindings/phy/phy.h>
#include <dt-bindings/pinctrl/k3.h>

&{/} {
	aliases {
		ethernet1 = "/pruss0_eth/ethernet-mii0";
		ethernet2 = "/pruss0_eth/ethernet-mii1";
	};

	/* Dual Ethernet application node on PRU-ICSSG0 */
	pruss0_eth: pruss0_eth {
		compatible = "ti,am654-icssg-prueth";
		pinctrl-names = "default";
		pinctrl-0 = <&icssg0_rgmii_pins_default>;
		sram = <&msmc_ram>;
		prus = <&pru0_0>, <&rtu0_0>, <&tx_pru0_0>,
		       <&pru0_1>, <&rtu0_1>, <&tx_pru0_1>;
		firmware-name = "ti-pruss/am65x-sr2-pru0-prueth-fw.elf",
				"ti-pruss/am65x-sr2-rtu0-prueth-fw.elf",
				"ti-pruss/am65x-sr2-txpru0-prueth-fw.elf",
				"ti-pruss/am65x-sr2-pru1-prueth-fw.elf",
				"ti-pruss/am65x-sr2-rtu1-prueth-fw.elf",
				"ti-pruss/am65x-sr2-txpru1-prueth-fw.elf";

		ti,pruss-gp-mux-sel = <2>,	/* MII mode */
				      <2>,
				      <2>,
				      <2>,	/* MII mode */
				      <2>,
				      <2>;
		mii-g-rt = <&icssg0_mii_g_rt>;
		mii-rt = <&icssg0_mii_rt>;
		dma-coherent;
		dmas = <&main_udmap 0xc100>, /* egress slice 0 */
		       <&main_udmap 0xc101>, /* egress slice 0 */
		       <&main_udmap 0xc102>, /* egress slice 0 */
		       <&main_udmap 0xc103>, /* egress slice 0 */
		       <&main_udmap 0xc104>, /* egress slice 1 */
		       <&main_udmap 0xc105>, /* egress slice 1 */
		       <&main_udmap 0xc106>, /* egress slice 1 */
		       <&main_udmap 0xc107>, /* egress slice 1 */

		       <&main_udmap 0x4100>, /* ingress slice 0 */
		       <&main_udmap 0x4101>, /* ingress slice 1 */
		       <&main_udmap 0x4102>, /* mgmnt rsp slice 0 */
		       <&main_udmap 0x4103>; /* mgmnt rsp slice 1 */
		dma-names = "tx0-0", "tx0-1", "tx0-2", "tx0-3",
			    "tx1-0", "tx1-1", "tx1-2", "tx1-3",
			    "rx0", "rx1",
			    "rxmgm0", "rxmgm1";

		pruss0_emac0: ethernet-mii0 {
			phy-handle = <&pruss0_eth0_phy>;
			phy-mode = "rgmii-rxid";
			interrupts-extended = <&icssg0_intc 24>;
			syscon-rgmii-delay = <&scm_conf 0x4100>;
			iep = <&icssg0_iep0>;
			/* Filled in by bootloader */
			local-mac-address = [00 00 00 00 00 00];
		};

		pruss0_emac1: ethernet-mii1 {
			phy-handle = <&pruss0_eth1_phy>;
			phy-mode = "rgmii-rxid";
			interrupts-extended = <&icssg0_intc 25>;
			syscon-rgmii-delay = <&scm_conf 0x4104>;
			/* Filled in by bootloader */
			local-mac-address = [00 00 00 00 00 00];
		};
	};
};

&main_pmx0 {
	icssg0_mdio_pins_default: icssg0_mdio_pins_default {
		pinctrl-single,pins = <
			/* (AE26) PRG0_MDIO0_MDIO */
			AM65X_IOPAD(0x0294, PIN_INPUT, 0)
			/* (AE28) PRG0_MDIO0_MDC */
			AM65X_IOPAD(0x0298, PIN_OUTPUT, 0)
		>;
	};

	icssg0_rgmii_pins_default: icssg0_rgmii_pins_default {
		pinctrl-single,pins = <
			/* (AB28) PRG0_PRU1_GPO0.PRG0_RGMII2_RD0 */
			AM65X_IOPAD(0x0244, PIN_INPUT, 2)
			/* (AC28) PRG0_PRU1_GPO1.PRG0_RGMII2_RD1 */
			AM65X_IOPAD(0x0248, PIN_INPUT, 2)
			/* (AC27) PRG0_PRU1_GPO2.PRG0_RGMII2_RD2 */
			AM65X_IOPAD(0x024c, PIN_INPUT, 2)
			/* (AB26) PRG0_PRU1_GPO3.PRG0_RGMII2_RD3 */
			AM65X_IOPAD(0x0250, PIN_INPUT, 2)
			/* (AC25) PRG0_PRU1_GPO12.PRG0_RGMII2_TD0 */
			AM65X_IOPAD(0x0274, PIN_OUTPUT, 2)
			/* (AD25) PRG0_PRU1_GPO13.PRG0_RGMII2_TD1 */
			AM65X_IOPAD(0x0278, PIN_OUTPUT, 2)
			/* (AD24) PRG0_PRU1_GPO14.PRG0_RGMII2_TD2 */
			AM65X_IOPAD(0x027c, PIN_OUTPUT, 2)
			/* (AE27) PRG0_PRU1_GPO15.PRG0_RGMII2_TD3 */
			AM65X_IOPAD(0x0280, PIN_OUTPUT, 2)
			/* (AC24) PRG0_PRU1_GPO16.PRG0_RGMII2_TXC */
			AM65X_IOPAD(0x0284, PIN_INPUT, 2)
			/* (AB24) PRG0_PRU1_GPO11.PRG0_RGMII2_TX_CTL */
			AM65X_IOPAD(0x0270, PIN_OUTPUT, 2)
			/* (AB27) PRG0_PRU1_GPO6.PRG0_RGMII2_RXC */
			AM65X_IOPAD(0x025c, PIN_INPUT, 2)
			/* (AA25) PRG0_PRU1_GPO4.PRG0_RGMII2_RX_CTL */
			AM65X_IOPAD(0x0254, PIN_INPUT, 2)

			/* (V24) PRG0_PRU0_GPO0.PRG0_RGMII1_RD0 */
			AM65X_IOPAD(0x01f4, PIN_INPUT, 2)
			/* (W25) PRG0_PRU0_GPO1.PRG0_RGMII1_RD1 */
			AM65X_IOPAD(0x01f8, PIN_INPUT, 2)
			/* (W24) PRG0_PRU0_GPO2.PRG0_RGMII1_RD2 */
			AM65X_IOPAD(0x01fc, PIN_INPUT, 2)
			/* (AA27) PRG0_PRU0_GPO3.PRG0_RGMII1_RD3 */
			AM65X_IOPAD(0x0200, PIN_INPUT, 2)
			/* (AD27) PRG0_PRU0_GPO12.PRG0_RGMII1_TD0 */
			AM65X_IOPAD(0x0224, PIN_OUTPUT, 2)
			/* (AC26) PRG0_PRU0_GPO13.PRG0_RGMII1_TD1 */
			AM65X_IOPAD(0x0228, PIN_OUTPUT, 2)
			/* (AD26) PRG0_PRU0_GPO14.PRG0_RGMII1_TD2 */
			AM65X_IOPAD(0x022c, PIN_OUTPUT, 2)
			/* (AA24) PRG0_PRU0_GPO15.PRG0_RGMII1_TD3 */
			AM65X_IOPAD(0x0230, PIN_OUTPUT, 2)
			/* (AD28) PRG0_PRU0_GPO16.PRG0_RGMII1_TXC */
			AM65X_IOPAD(0x0234, PIN_INPUT, 2)
			/* (AB25) PRG0_PRU0_GPO11.PRG0_RGMII1_TX_CTL */
			AM65X_IOPAD(0x0220, PIN_OUTPUT, 2)
			/* (Y25) PRG0_PRU0_GPO6.PRG0_RGMII1_RXC */
			AM65X_IOPAD(0x020c, PIN_INPUT, 2)
			/* (Y24) PRG0_PRU0_GPO4.PRG0_RGMII1_RX_CTL */
			AM65X_IOPAD(0x0204, PIN_INPUT, 2)
		>;
	};
};

&icssg0_mdio {
	pinctrl-names = "default";
	pinctrl-0 = <&icssg0_mdio_pins_default>;
	#address-cells = <1>;
	#size-cells = <0>;
	reset-gpios = <&pca9555_20 0 GPIO_ACTIVE_LOW>;
	reset-delay-us = <1000>;
	status = "okay";

	/* ti,force-master is required due to the high jitter of our clock
	 * generator. This is a workaround and prevents connections to other
	 * devices that also require to use master mode (like the PRU Ethernet
	 * ports of other MBa65xx mainboards) */
	pruss0_eth0_phy: pruss0_phy0@1 {
		reg = <1>;
		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
		ti,force-master;
	};

	pruss0_eth1_phy: pruss0_phy1@2 {
		reg = <2>;
		ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_00_NS>;
		ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
		ti,force-master;
	};
};
