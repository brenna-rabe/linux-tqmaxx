// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
/*
 * Copyright 2020 TQ Systems GmbH
 */

#include <dt-bindings/net/ti-dp83867.h>

/ {
	model = "TQ Systems GmbH i.MX8MM TQMa8MxML on MBa8Mx";
	compatible = "tq,imx8mm-mba8mx", "tq,imx8mm-tqma8mmx", "fsl,imx8mm";

	chosen {
		bootargs = "console=ttymxc2,115200 earlycon=ec_imx6q,0x30880000,115200";
		stdout-path = &uart3;
	};

	reg_vcc_3v3: regulator-3v3 {
		compatible = "regulator-fixed";
		regulator-name = "MBA8MQ_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};

	reg_usdhc2_vmmc: regulator-vmmc {
		compatible = "regulator-fixed";
		regulator-name = "VSD_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
	};
};

&fec1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_fec1>;
	phy-mode = "rgmii-id";
	phy-handle = <&ethphy0>;
	phy-supply = <&reg_vcc_3v3>;
	fsl,magic-packet;
	phy-reset-gpios = <&expander2 7 GPIO_ACTIVE_LOW>;
	phy-reset-duration = <500>;
	mac-address = [ 00 00 00 00 00 00 ];
	local-mac-address = [ 00 00 00 00 00 00 ];
	status = "okay";

	mdio {
		#address-cells = <1>;
		#size-cells = <0>;

		ethphy0: ethernet-phy@e {
			compatible = "ethernet-phy-ieee802.3-c22";
			reg = <0xe>;
			ti,rx-internal-delay = <DP83867_RGMIIDCTL_2_50_NS>;
			ti,tx-internal-delay = <DP83867_RGMIIDCTL_2_50_NS>;
			ti,fifo-depth = <DP83867_PHYCR_FIFO_DEPTH_4_B_NIB>;
			ti,dp83867-rxctrl-strap-quirk;
			ti,clk-output-sel = <DP83867_CLK_O_SEL_OFF>;
			enet-phy-lane-no-swap;
			/* LED0: Link, LED2: activity */
			ti,led-function = <0x0100>;
			/* active low, LED0/2 driven by phy */
			ti,led-ctrl = <0x1010>;
		};
	};
};

&iomuxc {
	pinctrl_fec1: fec1grp {
		fsl,pins = <
			MX8MM_IOMUXC_ENET_MDC_ENET1_MDC		0x40000002
			MX8MM_IOMUXC_ENET_MDIO_ENET1_MDIO	0x40000002
			MX8MM_IOMUXC_ENET_TD3_ENET1_RGMII_TD3	0x16
			MX8MM_IOMUXC_ENET_TD2_ENET1_RGMII_TD2	0x16
			MX8MM_IOMUXC_ENET_TD1_ENET1_RGMII_TD1	0x16
			MX8MM_IOMUXC_ENET_TD0_ENET1_RGMII_TD0	0x16
			MX8MM_IOMUXC_ENET_RD3_ENET1_RGMII_RD3	0x90
			MX8MM_IOMUXC_ENET_RD2_ENET1_RGMII_RD2	0x90
			MX8MM_IOMUXC_ENET_RD1_ENET1_RGMII_RD1	0x90
			MX8MM_IOMUXC_ENET_RD0_ENET1_RGMII_RD0	0x90
			MX8MM_IOMUXC_ENET_TXC_ENET1_RGMII_TXC	0x16
			MX8MM_IOMUXC_ENET_RXC_ENET1_RGMII_RXC	0x90
			MX8MM_IOMUXC_ENET_RX_CTL_ENET1_RGMII_RX_CTL	0x90
			MX8MM_IOMUXC_ENET_TX_CTL_ENET1_RGMII_TX_CTL	0x16
			MX8MM_IOMUXC_SAI2_RXC_GPIO4_IO22	0x10
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MM_IOMUXC_I2C2_SCL_I2C2_SCL		0x40000067
			MX8MM_IOMUXC_I2C2_SDA_I2C2_SDA		0x40000067
		>;
	};

	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MM_IOMUXC_I2C3_SCL_I2C3_SCL		0x40000067
			MX8MM_IOMUXC_I2C3_SDA_I2C3_SDA		0x40000067
		>;
	};

	pinctrl_uart1: uart1grp {
		fsl,pins = <
			MX8MM_IOMUXC_UART1_RXD_UART1_DCE_RX	0x16
			MX8MM_IOMUXC_UART1_TXD_UART1_DCE_TX	0x16
		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MM_IOMUXC_UART2_RXD_UART2_DCE_RX	0x16
			MX8MM_IOMUXC_UART2_TXD_UART2_DCE_TX	0x16
		>;
	};

	pinctrl_uart3: uart3grp {
		fsl,pins = <
			MX8MM_IOMUXC_UART3_RXD_UART3_DCE_RX	0x16
			MX8MM_IOMUXC_UART3_TXD_UART3_DCE_TX	0x16
		>;
	};

	pinctrl_uart4: uart4grp {
		fsl,pins = <
			MX8MM_IOMUXC_UART4_RXD_UART4_DCE_RX	0x16
			MX8MM_IOMUXC_UART4_TXD_UART4_DCE_TX	0x16
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2grpgpio {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CD_B_GPIO2_IO12	0x84
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x92
			MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x92
			MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x94
			MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x94
			MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x94
			MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x94
			MX8MM_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0x84
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp100mhz {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x92
			MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x92
			MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x92
			MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x92
			MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x92
			MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x92
			MX8MM_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0x84
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp200mhz {
		fsl,pins = <
			MX8MM_IOMUXC_SD2_CLK_USDHC2_CLK		0x96
			MX8MM_IOMUXC_SD2_CMD_USDHC2_CMD		0x96
			MX8MM_IOMUXC_SD2_DATA0_USDHC2_DATA0	0x96
			MX8MM_IOMUXC_SD2_DATA1_USDHC2_DATA1	0x96
			MX8MM_IOMUXC_SD2_DATA2_USDHC2_DATA2	0x96
			MX8MM_IOMUXC_SD2_DATA3_USDHC2_DATA3	0x96
			MX8MM_IOMUXC_GPIO1_IO04_USDHC2_VSELECT	0x84
		>;
	};
};

&i2c1 {
	systemcontroller: syscon@11 {
		reg = <0x11>;
		status = "disabled";
	};

	expander0: gpio@23 {
		compatible = "nxp,pca9555";
		reg = <0x23>;
		gpio-controller;
		#gpio-cells = <2>;
		vcc-supply = <&reg_vcc_3v3>;

		sd-mux-oe {
			gpio-hog;
			gpios = <8 0>;
			output-low;
			line-name = "SD_MUX_EN#";
		};

		boot-cfg-oe {
			gpio-hog;
			gpios = <12 0>;
			output-high;
			line-name = "BOOT_CFG_OE#";
		};
	};

	expander1: gpio@24 {
		compatible = "nxp,pca9555";
		reg = <0x24>;
		gpio-controller;
		#gpio-cells = <2>;
		vcc-supply = <&reg_vcc_3v3>;
	};

	expander2: gpio@27 {
		compatible = "nxp,pca9555";
		reg = <0x27>;
		gpio-controller;
		#gpio-cells = <2>;
		vcc-supply = <&reg_vcc_3v3>;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	/*
	 * NXP SE97BTP with temperature sensor + eeprom
	 * ATTENTION: do not use correct dt compatible since this will conflict
	 * with hwmon sysfs ABI and break device registration
	 */
	sensor1: sensor@1f {
		compatible = "nxp,se97", "jedec,jc-42.4-temp";
		reg = <0x1f>;
		status = "okay";
	};

	eeprom3: eeprom@57 {
		compatible = "nxp,se97b", "atmel,24c02";
		reg = <0x57>;
		pagesize = <16>;
		status = "okay";
	};

	/* PCIe CLK, should work without intervention */
	pciclk: clk@68 {
		reg = <0x68>;
		status = "disabled";
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	assigned-clocks = <&clk IMX8MM_CLK_UART1>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	assigned-clocks = <&clk IMX8MM_CLK_UART2>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	status = "okay";
};

/* console */
&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	status = "okay";
};

/* TODO: does not work, leads to system stall */
&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	assigned-clocks = <&clk IMX8MM_CLK_UART4>;
	assigned-clock-parents = <&clk IMX8MM_SYS_PLL1_80M>;
	status = "disabled";
};

&usdhc2 {
	pinctrl-names = "default", "state_100mhz", "state_200mhz";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	bus-width = <4>;
	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
	disable-wp;
	no-mmc;
	no-1-8-v;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	status = "okay";
};
